name: Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Select the release type (major, minor, patch, or next)"
        required: true
        default: "patch"
        type: choice
        options:
          - major
          - minor
          - patch
          - next

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required for pushing changes

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch full history to ensure accurate version tagging

      # Step 2: Install Node.js v22
      - name: Install Node.js v22
        run: |
          curl -fsSL https://deb.nodesource.com/setup_22.x | sudo -E bash -
          sudo apt-get install -y nodejs
          node -v

      # Step 3: Install pnpm
      - name: Install pnpm
        run: |
          PNPM_VERSION=$(node -p "require('./package.json').packageManager.split('@')[1].split('+')[0]")
          npm install -g pnpm@$PNPM_VERSION
          pnpm -v

      # Step 4: Install dependencies
      - name: Install dependencies
        run: pnpm install

      # Step 5: Run tests (Optional but recommended)
      - name: Run tests
        run: pnpm test

      # Step 6: Bump version and create tag
      - name: Bump version and tag
        id: bump_version
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release_type }}
        run: |
          if [ "$RELEASE_TYPE" == "next" ]; then
            pnpm version prerelease --preid=next
          else
            pnpm version $RELEASE_TYPE
          fi
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          git add package.json pnpm-lock.yaml
          git commit -m "chore(release): v$NEW_VERSION"
          git tag "v$NEW_VERSION"

      # Step 7: Push changes and tags
      - name: Push changes and tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin HEAD:${{ github.ref }}
          git push origin "v${{ steps.bump_version.outputs.version }}"

      # Step 8: Publish to npm
      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [ "${{ github.event.inputs.release_type }}" == "next" ]; then
            pnpm publish --tag next --access public
          else
            pnpm publish --access public
          fi

      # Step 9: Create GitHub Release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.bump_version.outputs.version }}"
          release_name: "v${{ steps.bump_version.outputs.version }}"
          body: "Release v${{ steps.bump_version.outputs.version }}"
          draft: false
          prerelease: ${{ github.event.inputs.release_type == 'next' }}
